import logging
from typing import Optional, Dict
from aiogram import F, Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from db.database import Database
from bot.projects_keyboards import (
    main_projects_keyboard,
    projects_list_keyboard,
    project_manage_keyboard,
    cancel_keyboard,
    confirm_keyboard,
)
from bot.utils.states import ProjectStates
from bot.utils.tariff_checker import TariffChecker

router = Router(name="projects")
db = Database()


# –í—Ö–æ–¥ –≤ –º–µ–Ω—é –ø—Ä–æ–µ–∫—Ç–æ–≤
@router.callback_query(F.data == "projects_menu")
async def projects_menu(callback: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –ø—Ä–æ–µ–∫—Ç–æ–≤"""
    await state.clear()

    await callback.message.edit_text(
        "üìä <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏</b>\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π "
        "–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.",
        reply_markup=main_projects_keyboard(),
        parse_mode="HTML",
    )


# –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
@router.callback_query(F.data == "projects_list")
async def list_projects(callback: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤"""
    user_id = callback.from_user.id
    projects = db.get_user_projects(user_id)

    if not projects:
        await callback.message.edit_text(
            "üìä <b>–°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤</b>\n\n"
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏–π.",
            reply_markup=projects_list_keyboard([]),
            parse_mode="HTML",
        )
        return

    projects_text = "\n".join(
        [
            f"{'üü¢' if p.is_active else 'üî¥'} <b>{p.name}</b> ({len(db.get_project_chats(p.id))} —á–∞—Ç–æ–≤)"
            for p in projects
        ]
    )

    await callback.message.edit_text(
        f"üìä <b>–°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤</b>\n\n"
        f"{projects_text}\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
        reply_markup=projects_list_keyboard(projects),
        parse_mode="HTML",
    )


# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ - –Ω–∞—á–∞–ª–æ
@router.callback_query(F.data == "create_project")
async def create_project_start(callback: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"""
    await state.set_state(ProjectStates.create_name)

    await callback.message.edit_text(
        "üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞</b>\n\n" "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:",
        reply_markup=cancel_keyboard(),
        parse_mode="HTML",
    )


# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ - –≤–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è
@router.message(ProjectStates.create_name)
async def create_project_name(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"""
    if len(message.text) > 50:
        await message.answer(
            "‚ö†Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ –±–æ–ª–µ–µ 50 —Å–∏–º–≤–æ–ª–æ–≤."
        )
        return

    await state.update_data(name=message.text)
    await state.set_state(ProjectStates.create_description)

    await message.answer(
        "üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞</b>\n\n"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: <b>{message.text}</b>\n\n"
        f"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ (–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '-' —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å):",
        reply_markup=cancel_keyboard(),
        parse_mode="HTML",
    )


# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ - –≤–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è
@router.message(ProjectStates.create_description)
async def create_project_description(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"""
    description = None if message.text == "-" else message.text

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    name = data.get("name")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞
    can_create, tariff_message = TariffChecker.can_create_project(
        message.from_user.id, db
    )
    if not can_create:
        await message.answer(
            f"‚ö†Ô∏è <b>–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç:</b> {tariff_message}\n\n"
            f"–î–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –≤—ã—à–µ.",
            reply_markup=main_projects_keyboard(),
            parse_mode="HTML",
        )
        await state.clear()
        return

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç –≤ –ë–î (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–æ–µ–∫—Ç –∞–∫—Ç–∏–≤–Ω—ã–π)
    project = db.create_project(
        user_id=message.from_user.id, name=name, description=description, is_active=True
    )

    await state.clear()

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
    await message.answer(
        "‚úÖ <b>–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!</b>\n\n"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: <b>{project.name}</b>\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {project.description or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
        f"–°—Ç–∞—Ç—É—Å: üü¢ –ê–∫—Ç–∏–≤–µ–Ω\n\n"
        f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Ç—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.",
        reply_markup=project_manage_keyboard(project),
        parse_mode="HTML",
    )


# –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–µ–∫—Ç–∞
@router.callback_query(F.data.startswith("project|"))
async def view_project(callback: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ"""
    project_id = int(callback.data.split("|")[1])
    project = db.get_project(project_id)

    if not project:
        await callback.message.edit_text(
            "‚ö†Ô∏è –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=main_projects_keyboard()
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –ø—Ä–æ–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if project.user_id != callback.from_user.id:
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –ø—Ä–æ–µ–∫—Ç—É.", show_alert=True)
        return

    chats_count = len(db.get_project_chats(project_id))
    status = "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if project.is_active else "üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

    await callback.message.edit_text(
        f"üìä <b>–ü—Ä–æ–µ–∫—Ç: {project.name}</b>\n\n"
        f"–°—Ç–∞—Ç—É—Å: {status}\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {project.description or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
        f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Ç–æ–≤: {chats_count}\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=project_manage_keyboard(project),
        parse_mode="HTML",
    )


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ - –Ω–∞—á–∞–ª–æ
@router.callback_query(F.data.startswith("edit_project|"))
async def edit_project_start(callback: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"""
    project_id = int(callback.data.split("|")[1])
    project = db.get_project(project_id)

    if not project:
        await callback.message.edit_text(
            "‚ö†Ô∏è –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=main_projects_keyboard()
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –ø—Ä–æ–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if project.user_id != callback.from_user.id:
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –ø—Ä–æ–µ–∫—Ç—É.", show_alert=True)
        return

    await state.set_state(ProjectStates.edit_name)
    await state.update_data(project_id=project_id)

    await callback.message.edit_text(
        f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞</b>\n\n"
        f"–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: <b>{project.name}</b>\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ (–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '-' —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π):",
        reply_markup=cancel_keyboard(f"project|{project_id}"),
        parse_mode="HTML",
    )


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ - –≤–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è
@router.message(ProjectStates.edit_name)
async def edit_project_name(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"""
    data = await state.get_data()
    project_id = data.get("project_id")
    project = db.get_project(project_id)

    if not project:
        await message.answer(
            "‚ö†Ô∏è –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=main_projects_keyboard()
        )
        await state.clear()
        return

    if message.text != "-":
        if len(message.text) > 50:
            await message.answer(
                "‚ö†Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ –±–æ–ª–µ–µ 50 —Å–∏–º–≤–æ–ª–æ–≤."
            )
            return

        await state.update_data(name=message.text)
    else:
        await state.update_data(name=project.name)

    await state.set_state(ProjectStates.edit_description)

    await message.answer(
        f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞</b>\n\n"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: <b>{message.text if message.text != '-' else project.name}</b>\n\n"
        f"–¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {project.description or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ (–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '-' —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π):",
        reply_markup=cancel_keyboard(f"project|{project_id}"),
        parse_mode="HTML",
    )


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ - –≤–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è
@router.message(ProjectStates.edit_description)
async def edit_project_description(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"""
    data = await state.get_data()
    project_id = data.get("project_id")
    name = data.get("name")

    project = db.get_project(project_id)
    if not project:
        await message.answer(
            "‚ö†Ô∏è –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=main_projects_keyboard()
        )
        await state.clear()
        return

    description = project.description if message.text == "-" else message.text

    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –≤ –ë–î
    updated_project = db.update_project(
        project_id=project_id, name=name, description=description
    )

    await state.clear()

    if updated_project:
        await message.answer(
            "‚úÖ <b>–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!</b>\n\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: <b>{updated_project.name}</b>\n"
            f"–û–ø–∏—Å–∞–Ω–∏–µ: {updated_project.description or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n\n",
            reply_markup=project_manage_keyboard(updated_project),
            parse_mode="HTML",
        )
    else:
        await message.answer(
            "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç.", reply_markup=main_projects_keyboard()
        )


# –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
@router.callback_query(F.data.startswith("toggle_project|"))
async def toggle_project(callback: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"""
    project_id = int(callback.data.split("|")[1])
    project = db.get_project(project_id)

    if not project:
        await callback.message.edit_text(
            "‚ö†Ô∏è –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=main_projects_keyboard()
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –ø—Ä–æ–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if project.user_id != callback.from_user.id:
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –ø—Ä–æ–µ–∫—Ç—É.", show_alert=True)
        return

    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞
    updated_project = db.toggle_project_status(project_id)

    if not updated_project:
        await callback.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞.", show_alert=True)
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —á–∞—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
    project_chats = db.get_project_chats(project_id)
    chats_count = len(project_chats)

    # –ü–æ–ª—É—á–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –∏–∑ –±–æ—Ç–∞
    monitoring_system = callback.bot.monitoring_system

    # –ï—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —á–∞—Ç–æ–≤
    if monitoring_system:
        # –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω - –∑–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        if updated_project.is_active:
            active_chats = db.get_project_chats(project_id, active_only=True)

            if active_chats:
                activated_count = 0

                for chat in active_chats:
                    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –≤—Å—Ç—É–ø–∏—Ç—å –≤ —á–∞—Ç
                    join_success = await monitoring_system.join_chat(chat.id)

                    # –ï—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –≤—Å—Ç—É–ø–∏—Ç—å, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
                    if join_success:
                        monitor_success = (
                            await monitoring_system.add_chat_to_monitoring(
                                project_id, chat.id
                            )
                        )
                        if monitor_success:
                            activated_count += 1

                if activated_count > 0:
                    await callback.answer(
                        f"–ü—Ä–æ–µ–∫—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ó–∞–ø—É—â–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ {activated_count} –∏–∑ {len(active_chats)} —á–∞—Ç–æ–≤.",
                        show_alert=True,
                    )
                else:
                    await callback.answer(
                        "–ü—Ä–æ–µ–∫—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–∞—Ç–æ–≤.",
                        show_alert=True,
                    )
            else:
                await callback.answer(
                    "–ü—Ä–æ–µ–∫—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, –Ω–æ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.",
                    show_alert=True,
                )

        # –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        else:
            stopped_count = 0

            for chat in project_chats:
                if await monitoring_system.remove_chat_from_monitoring(chat.id):
                    stopped_count += 1

            await callback.answer(
                f"–ü—Ä–æ–µ–∫—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –û—Ç–∫–ª—é—á–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ {stopped_count} —á–∞—Ç–æ–≤.",
                show_alert=True,
            )
    else:
        status = "–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω" if updated_project.is_active else "–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        await callback.answer(
            f"–ü—Ä–æ–µ–∫—Ç {status}, –Ω–æ —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.", show_alert=True
        )

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    status_text = "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if updated_project.is_active else "üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

    await callback.message.edit_text(
        f"üìä <b>–ü—Ä–æ–µ–∫—Ç: {updated_project.name}</b>\n\n"
        f"–°—Ç–∞—Ç—É—Å: {status_text}\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {updated_project.description or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
        f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Ç–æ–≤: {chats_count}\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=project_manage_keyboard(updated_project),
        parse_mode="HTML",
    )


# –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ - –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
@router.callback_query(F.data.startswith("delete_project|"))
async def delete_project_confirm(callback: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"""
    project_id = int(callback.data.split("|")[1])
    project = db.get_project(project_id)

    if not project:
        await callback.message.edit_text(
            "‚ö†Ô∏è –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=main_projects_keyboard()
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –ø—Ä–æ–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if project.user_id != callback.from_user.id:
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –ø—Ä–æ–µ–∫—Ç—É.", show_alert=True)
        return

    await state.set_state(ProjectStates.delete_confirm)
    await state.update_data(project_id=project_id)

    chats_count = len(db.get_project_chats(project_id))

    await callback.message.edit_text(
        f"üóëÔ∏è <b>–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞</b>\n\n"
        f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç <b>{project.name}</b>?\n\n"
        f"–ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∏ {chats_count} —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤.\n"
        f"–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!",
        reply_markup=confirm_keyboard(
            confirm_callback=f"confirm_delete_project|{project_id}",
            cancel_callback=f"project|{project_id}",
        ),
        parse_mode="HTML",
    )


# –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
@router.callback_query(F.data.startswith("confirm_delete_project|"))
async def delete_project_execute(callback: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"""
    project_id = int(callback.data.split("|")[1])
    project = db.get_project(project_id)

    if not project:
        await callback.message.edit_text(
            "‚ö†Ô∏è –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=main_projects_keyboard()
        )
        await state.clear()
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –ø—Ä–æ–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if project.user_id != callback.from_user.id:
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –ø—Ä–æ–µ–∫—Ç—É.", show_alert=True)
        await state.clear()
        return

    # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç
    success = db.delete_project(project_id)

    await state.clear()

    if success:
        await callback.message.edit_text(
            f"‚úÖ <b>–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!</b>\n\n"
            f"–ü—Ä–æ–µ–∫—Ç <b>{project.name}</b> –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∏–º —á–∞—Ç—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.",
            reply_markup=main_projects_keyboard(),
            parse_mode="HTML",
        )
    else:
        await callback.message.edit_text(
            "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç.", reply_markup=main_projects_keyboard()
        )
