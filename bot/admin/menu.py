from aiogram import Router, F, types
from aiogram.filters import Command
from db.database import Database

router = Router(name="admin_menu")
db = Database()


async def admin_menu_base(message: types.Message, user_id: int):
    if db.get_user(user_id).is_admin:
        keyboard = types.InlineKeyboardMarkup(
            inline_keyboard=[
                # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –±–∞–ª–∞–Ω—Å–æ–º
                [
                    types.InlineKeyboardButton(
                        text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="view_users_stats"
                    ),
                    types.InlineKeyboardButton(
                        text="üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="edit_balance"
                    ),
                ],
                # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
                [
                    types.InlineKeyboardButton(
                        text="üëë –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="add_admin"
                    ),
                    types.InlineKeyboardButton(
                        text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã", callback_data="edit_params"
                    ),
                ],
                # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã
                [
                    types.InlineKeyboardButton(
                        text="üìä –ò—Å—Ç–æ—á–Ω–∏–∫–∏", callback_data="view_codes"
                    ),
                    types.InlineKeyboardButton(
                        text="üí∏ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π", callback_data="export_payments"
                    ),
                ],
                # –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –∏ —Å–∏—Å—Ç–µ–º–∞
                [
                    types.InlineKeyboardButton(
                        text="üì® –†–∞—Å—Å—ã–ª–∫–∞", callback_data="broadcast"
                    ),
                    types.InlineKeyboardButton(
                        text="üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞", callback_data="reboot_server"
                    ),
                ],
                # –ü–µ—Ä–µ–Ω–æ—Å –∑–∞–¥–∞—á –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
                [
                    types.InlineKeyboardButton(
                        text="üîÄ –ü–µ—Ä–µ–Ω–æ—Å –∑–∞–¥–∞—á", callback_data="transfer_tasks"
                    ),
                    types.InlineKeyboardButton(
                        text="‚¨ÜÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Å—Å–∏–∏", callback_data="upload_session"
                    ),
                ],
                # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞–º–∏
                [
                    types.InlineKeyboardButton(
                        text="üéØ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞–º–∏", callback_data="tariffs_menu"
                    ),
                ],
            ]
        )
        await message.answer("üîß –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", reply_markup=keyboard)


@router.message(Command("admin"))
async def admin_menu(message: types.Message):
    await admin_menu_base(message, message.from_user.id)


@router.callback_query(F.data == "back_to_admin")
async def back_to_admin(callback: types.CallbackQuery):
    await admin_menu_base(callback.message, callback.from_user.id)
