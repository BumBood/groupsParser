from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List
from db.models import Project, ProjectChat


def main_projects_keyboard() -> InlineKeyboardMarkup:
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìã –ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã", callback_data="projects_list"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ûï –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç", callback_data="create_project"
                )
            ],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")],
        ]
    )


def projects_list_keyboard(projects: List[Project]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    keyboard = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    for project in projects:
        status_emoji = "üü¢" if project.is_active else "üî¥"
        keyboard.append(
            [
                InlineKeyboardButton(
                    text=f"{status_emoji} {project.name}",
                    callback_data=f"project|{project.id}",
                )
            ]
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard.append(
        [
            InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å", callback_data="create_project"),
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="projects_menu"),
        ]
    )

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def project_manage_keyboard(project: Project) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º"""
    status_text = "üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" if project.is_active else "üü¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å"
    status_callback = f"toggle_project|{project.id}"

    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=status_text, callback_data=status_callback)],
            [
                InlineKeyboardButton(
                    text="üìã –ß–∞—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞", callback_data=f"project_chats|{project.id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç", callback_data=f"add_chat|{project.id}"
                ),
                InlineKeyboardButton(
                    text="‚ûï‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ",
                    callback_data=f"add_multiple_chats|{project.id}",
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç",
                    callback_data=f"delete_project|{project.id}",
                ),
                InlineKeyboardButton(
                    text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_project|{project.id}"
                ),
            ],
            [InlineKeyboardButton(text="üîô –ö –ø—Ä–æ–µ–∫—Ç–∞–º", callback_data="projects_list")],
        ]
    )


def chats_list_keyboard(
    chats: List[ProjectChat], project_id: int
) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —á–∞—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"""
    keyboard = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞
    for chat in chats:
        status_emoji = "üü¢" if chat.is_active else "üî¥"
        keyboard.append(
            [
                InlineKeyboardButton(
                    text=f"{status_emoji} {chat.chat_title or chat.chat_id}",
                    callback_data=f"chat|{chat.id}",
                )
            ]
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard.append(
        [
            InlineKeyboardButton(
                text="‚ûï –î–æ–±–∞–≤–∏—Ç—å", callback_data=f"add_chat|{project_id}"
            ),
            InlineKeyboardButton(
                text="‚ûï‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ",
                callback_data=f"add_multiple_chats|{project_id}",
            ),
        ]
    )
    keyboard.append(
        [
            InlineKeyboardButton(
                text="üîô –ù–∞–∑–∞–¥", callback_data=f"project|{project_id}"
            ),
        ]
    )

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def chat_manage_keyboard(chat: ProjectChat) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —á–∞—Ç–æ–º"""
    status_text = "üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" if chat.is_active else "üü¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å"
    status_callback = f"toggle_chat|{chat.id}"

    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞", callback_data=f"chat_keywords|{chat.id}"
                )
            ],
            [InlineKeyboardButton(text=status_text, callback_data=status_callback)],
            [
                InlineKeyboardButton(
                    text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —á–∞—Ç", callback_data=f"delete_chat|{chat.id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîô –ö —á–∞—Ç–∞–º", callback_data=f"project_chats|{chat.project_id}"
                )
            ],
        ]
    )


def cancel_keyboard(callback_data: str = "projects_menu") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data=callback_data)],
        ]
    )


def confirm_keyboard(
    confirm_callback: str, cancel_callback: str
) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –¥–µ–π—Å—Ç–≤–∏—è"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=confirm_callback
                ),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback),
            ],
        ]
    )


def parse_history_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üì• –ù–∞—á–∞—Ç—å –ø–∞—Ä—Å–∏–Ω–≥", callback_data="start_parse_history"
                )
            ],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="projects_menu")],
        ]
    )
